name: 'Single Click Deployment'
on:
  workflow_dispatch:
    inputs:
      ENV_LABEL:
        description: Environment Label
        required: true
        default: dev
      ENV_TYPE:
        description: Environment Type
        required: true
        default: nonproduction
      DRY_RUN:
        type: choice
        description: Dry Run Mode
        default: true
        options:
          - true
          - false
      WORKFLOW:
        description: Name of the workflow file
        required: true
        default: workflow.yml
      ACCOUNT:
        type: choice
        description: AWS AccountID
        default: 290728412178
        options:
          - 574574226067
          - 290728412178
env:
  ENV_LABEL: ${{ github.event.inputs.ENV_LABEL }}
  ENV_TYPE: ${{ github.event.inputs.ENV_TYPE }}
  ROLE: ${{ secrets.NONPROD_ROLE_ARN }}
  ROLE_ARN: "arn:aws:iam::${{ github.event.inputs.ACCOUNT }}:role/Power"
  ENV_LIST_PARAMETER: active-sputnik-environments
  WORKFLOW: ${{ github.event.inputs.WORKFLOW }}
  #Below env vars are for AWS CLI for enabling exponential retry backoff mode.
  # details: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html#cli-config-retry_mode
  AWS_MAX_ATTEMPTS: 20
  AWS_RETRY_MODE: standard

jobs:
  deploy-staging:
    name: 'Deploying in Staging Environment: ${ENV_LABEL}, Type: ${ENV_TYPE }'
    environment:
      name: staging
    env:
      ENV_LABEL: staging
      ENV_TYPE: nonproduction
      DRY_RUN: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Configure AWS Credentials (nonproduction)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CENTRAL_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CENTRAL_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: ${{ env.ROLE_ARN }}
          role-skip-session-tagging: true
          mask-aws-account-id: false

      - name: Run cfn-deploy
        run: |
          aws s3 cp s3://artifactory-us-east-1-290728412178/drs/cfn-deploy cfn-deploy
          chmod +x ./cfn-deploy
          ./cfn-deploy

  # manualApproval:
  #   needs: deploy-staging
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 5
  #   steps:
  #     - uses: trstringer/manual-approval@v1
  #       with:
  #         secret: ${{ github.TOKEN }}
  #         approvers: balmanrawat
  #         minimum-approvals: 1
  #         issue-title: "Deploying first version in prod"

  deploy-uat:
    needs: deploy-staging
    name: 'Deploying in UAT Environment: ${ENV_LABEL}, Type: ${ENV_TYPE }'
    environment:
      name: uat
    runs-on: ubuntu-latest
    env:
      ENV_LABEL: uat
      ENV_TYPE: production
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Configure AWS Credentials (nonproduction)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CENTRAL_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CENTRAL_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: ${{ env.ROLE_ARN }}
          role-skip-session-tagging: true
          mask-aws-account-id: false

      - name: Run cfn-deploy
        run: |
          aws s3 cp s3://artifactory-us-east-1-290728412178/drs/cfn-deploy cfn-deploy
          chmod +x ./cfn-deploy
          ./cfn-deploy

  dry-run-production:
    needs: deploy-uat
    name: 'Dry Run in Production Environment: ${ENV_LABEL}, Type: ${ENV_TYPE }'
    runs-on: ubuntu-latest
    env:
      ENV_LABEL: livenv
      ENV_TYPE: production
      DRY_RUN: true
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Configure AWS Credentials (nonproduction)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CENTRAL_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CENTRAL_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: ${{ env.ROLE_ARN }}
          role-skip-session-tagging: true
          mask-aws-account-id: false

      - name: Run cfn-deploy
        run: |
          aws s3 cp s3://artifactory-us-east-1-290728412178/drs/cfn-deploy cfn-deploy
          chmod +x ./cfn-deploy
          ./cfn-deploy

  deploy-production:
    needs: dry-run-production
    name: 'Deploy in Production Environment: ${ENV_LABEL}, Type: ${ENV_TYPE }'
    environment:
      name: production
    runs-on: ubuntu-latest
    env:
      ENV_LABEL: livenv
      ENV_TYPE: production
      DRY_RUN: false
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Configure AWS Credentials (nonproduction)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CENTRAL_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CENTRAL_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: ${{ env.ROLE_ARN }}
          role-skip-session-tagging: true
          mask-aws-account-id: false

      - name: Run cfn-deploy
        run: |
          aws s3 cp s3://artifactory-us-east-1-290728412178/drs/cfn-deploy cfn-deploy
          chmod +x ./cfn-deploy
          ./cfn-deploy
